(5-8-23)
1) 1. Write a program to find the second largest element in an array.
code:
N=list(map(int,input().split()))
z=sorted(N)
print(z[-2])
output:
23 78 34 90 56
78
-----------------------------------------------------------------------
2. Write a program to sort an array in ascending order using the bubble sort algorithm.
code:
def bubbleSort(array):
  for a in range(len(array)):
    for b in range(0, len(array) - a - 1):
      if array[b] > array[b + 1]:
        temp = array[b]
        array[b] = array[b+1]
        array[b+1] = temp
array = [5, 4, 2, 1, 3]
print("The original array is: ", array)
bubbleSort(array)
print('The Sorted Array is: ', array)
output:
The original array is:  [5, 4, 2, 1, 3]
The Sorted Array is:  [1, 2, 3, 4, 5]
-------------------------------------------------------------------------
3. Write a program to reverse a linked list.
code:
--------------------------------------------------------------------------
4. Write a program to find the factorial of a number using recursion.
code:
def factorial(n):
   if n == 1:
       return n
   else:
       return n*factorial(n-1)
num = 5
if num < 0:
   print("Sorry, factorial does not exist for negative numbers")
elif num == 0:
   print("The factorial of 0 is 1")
else:
   print("The factorial of", num, "is", factorial(num))

output:
The factorial of 5 is 120
----------------------------------------------------------------------------
5. Write a program to check if a given string is an anagram.
lower() - converts the characters into lower case
sorted() - sorts both the strings
If sorted arrays are equal, then the strings are anagram.
code:
s1=input()
s2=input()
a=s1.lower()
b=s2.lower()
if sorted(a)==sorted(b):
    print("Anagram")
else:
    print("not Anagram")
output:
teak
keat
Anagram
